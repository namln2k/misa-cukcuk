<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DeleteDepartmentSuccess" xml:space="preserve">
    <value>Xóa phòng ban thành công!</value>
    <comment>Thông điệp khi xóa thành công Department</comment>
  </data>
  <data name="DeleteEmployeeSuccess" xml:space="preserve">
    <value>Xóa nhân viên thành công!</value>
    <comment>Thông điệp khi xóa thành công Employee</comment>
  </data>
  <data name="ExceptionError" xml:space="preserve">
    <value>Có lỗi xảy ra, vui lòng liên hệ MISA!</value>
    <comment>Thông điệp khi xảy ra Exception</comment>
  </data>
  <data name="UpdateEmployeeSuccess" xml:space="preserve">
    <value>Sửa đổi thông tin nhân viên thành công!</value>
    <comment>Thông điệp khi sửa đổi thành công Employee</comment>
  </data>
  <data name="ValidationError_DepartmentCodeDuplicated" xml:space="preserve">
    <value>Mã phòng ban bị trùng, vui lòng kiểm tra lại!</value>
    <comment>Thông điệp khi DepartmentCode đã tồn tại trong database</comment>
  </data>
  <data name="ValidationError_DepartmentIdInexistent" xml:space="preserve">
    <value>Id phòng ban không tồn tại, vui lòng kiểm tra lại!</value>
    <comment>Thông điệp khi DepartmentId không tồn tại trong database</comment>
  </data>
  <data name="ValidationError_DepartmentIdInvalid" xml:space="preserve">
    <value>Id phòng ban sai định dạng, vui lòng kiểm tra lại!</value>
    <comment>Thông điệp khi DepartmentId bị sai định dạng</comment>
  </data>
  <data name="ValidationError_EmailInvalid" xml:space="preserve">
    <value>Email sai định dạng, vui lòng kiểm tra lại!</value>
    <comment>Thông điệp khi Email bị sai định dạng</comment>
  </data>
  <data name="ValidationError_EmployeeCodeDuplicated" xml:space="preserve">
    <value>Mã nhân viên bị trùng, vui lòng kiểm tra lại!</value>
    <comment>Thông điệp khi EmployeeCode đã tồn tại trong database</comment>
  </data>
  <data name="ValidationError_EmployeeCodeEmpty" xml:space="preserve">
    <value>Mã nhân viên không được phép để trống, vui lòng kiểm tra lại!</value>
    <comment>Thông điệp khi EmployeeCode bị để trống hoặc null</comment>
  </data>
  <data name="ValidationError_EmployeeIdInexistent" xml:space="preserve">
    <value>Id nhân viên không tồn tại, vui lòng kiểm tra lại!</value>
    <comment>Thông điệp khi EmployeeId không tồn tại trong database</comment>
  </data>
  <data name="ValidationError_EmployeeIdInvalid" xml:space="preserve">
    <value>Id nhân viên sai định dạng, vui lòng kiểm tra lại!</value>
    <comment>Thông điệp khi EmployeeId bị sai định dạng</comment>
  </data>
  <data name="ValidationError_EntityIdDuplicated" xml:space="preserve">
    <value>Id bị trùng, vui lòng kiểm tra lại!</value>
    <comment>Thông điệp khi Id của đối tượng đã tồn tại trong database</comment>
  </data>
  <data name="ValidationError_EntityIdInexistent" xml:space="preserve">
    <value>Id không tồn tại, vui lòng kiểm tra lại!</value>
    <comment>Thông điệp khi Id không tồn tại trong database</comment>
  </data>
  <data name="ValidationError_IdentityNumberEmpty" xml:space="preserve">
    <value>Số CMTND/CCCD không được phép để trống, vui lòng kiểm tra lại!</value>
    <comment>Thông điệp khi IdentityNumber bị để trống</comment>
  </data>
  <data name="ValidationError_PhoneNumberInvalid" xml:space="preserve">
    <value>Số điện thoại sai định dạng, vui lòng kiểm tra lại!</value>
    <comment>Thông điệp khi PhoneNumber bị sai định dạng</comment>
  </data>
</root>